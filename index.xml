<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mastering iOS</title>
    <link>https://kasroid.github.io/</link>
    <description>Recent content on Mastering iOS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 30 Aug 2020 02:36:53 +0900</lastBuildDate>
    
	<atom:link href="https://kasroid.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vim: ColorScheme 적용 및 직접 색 변경하기</title>
      <link>https://kasroid.github.io/posts/developertools/20200830-vim-colorscheme-%EC%A0%81%EC%9A%A9-%EB%B0%8F-%EC%A7%81%EC%A0%91-%EC%83%89-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0/</link>
      <pubDate>Sun, 30 Aug 2020 02:36:53 +0900</pubDate>
      
      <guid>https://kasroid.github.io/posts/developertools/20200830-vim-colorscheme-%EC%A0%81%EC%9A%A9-%EB%B0%8F-%EC%A7%81%EC%A0%91-%EC%83%89-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0/</guid>
      <description>이번에는 Vim 에서 외부 테마를 다운로드 받아 적용하고 Syntax Highlighting 색상을 좀 더 이쁘게 변경해보도록 하겠습니다. 그래도 Terminal 을 통해 글을 쓰려면 최소한 이정도는 갖춰야 조금 글 쓸 맛이 나잖아요?? ㅋㅋㅋ 그런데 지금 제가 사용하는 Vim 의 상태는&amp;hellip;
이 모양입니다. 못봐줄 정도에요&amp;hellip; 원색을 너무 많이 사용해서 그런건지 오히려 눈에 방해가 되는 그런 느낌도 들고요. 난 이제 그만 여기서 탈출해야겠어
그럼 본격적으로 설치해볼까요~
 테마 고르기 먼저 구글에서 Vim ColorScheme 을 검색해 여러분 스타일에 맞는 테마를 찾아보세요.</description>
    </item>
    
    <item>
      <title>Vim: Vundle 및 Markdown Plugin 설치하기</title>
      <link>https://kasroid.github.io/posts/developertools/20200829-vim-vundle-markdown-plugin-installation/</link>
      <pubDate>Sat, 29 Aug 2020 16:12:11 +0900</pubDate>
      
      <guid>https://kasroid.github.io/posts/developertools/20200829-vim-vundle-markdown-plugin-installation/</guid>
      <description>제가 Tistory 로 블로그를 시작했지만 Hugo 로 넘어오게된 이유가 몇 가지 있는데 그 중 가장 큰 비중을 차지하는 두가지가 하나는 Tistory 가 Markdown 을 제대로 지원하지 않고, 코드블럭 처리를 고려하면 글을 Tistory 전용 에디터에서 쓰는 것이 반 강제되는 것이었는데요. Tistory 에디터로 글을 쓰다보면 텍스트에 기본적인 강조 처리하는 것들도 전부 마우스로 처리해야하는데 매번 키보드에서 손이 움직이는게 여간 성가신 것이 아니었거든요. 그래서 포스트를 작성하는 와중에 이 모든걸 Terminal 에서 처리할 수 있으면 어떨까 하는 생각을 종종하게 되었고 결국 Hugo 로 블로그를 관리하는 것으로 결정했습니다.</description>
    </item>
    
    <item>
      <title>Sign in With Apple 구현하기: UIKit</title>
      <link>https://kasroid.github.io/posts/ios/20200829-sign-in-with-apple-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-uikit/</link>
      <pubDate>Sat, 29 Aug 2020 11:00:14 +0900</pubDate>
      
      <guid>https://kasroid.github.io/posts/ios/20200829-sign-in-with-apple-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-uikit/</guid>
      <description>본 포스팅은 Swift 5.2.4 기준으로 작성되었습니다.
 이번 새로운 프로젝트 진행 중에 소셜 로그인 서비스를 제공하기로 결정되었는데요. 앱에서 소셜 로그인을 하나라도 제공하게 되면 Apple 로그인도 반드시 지원해야 합니다. 요즘 로그인이 필요한 앱들은 웬만하면 소셜 로그인도 지원하는 추세니까 Apple 로그인도 구현해야되고&amp;hellip; 그러니까 지금 구현하는 방법을 알아두면 쓸 일이 많을거에요. 그럼 같이 한번 공부해볼까요~~
 Apple Developer Documentation 처음 접하는 내용은 무엇보다 공식문서를 먼저 살펴봐야겠죠!
이런저런 내용이 있긴한데 우리에게 필요한 부분은 App 과 Services 에 유저가 쉽게 로그인 할 수 있도록 도와주는 Framework 라는 정도인 것 같아요.</description>
    </item>
    
    <item>
      <title>Firebase: Xcode 프로젝트와 연동하기</title>
      <link>https://kasroid.github.io/posts/developertools/20200829-firebase-xcode-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%99%80-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0/</link>
      <pubDate>Sat, 29 Aug 2020 09:56:46 +0900</pubDate>
      
      <guid>https://kasroid.github.io/posts/developertools/20200829-firebase-xcode-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%99%80-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0/</guid>
      <description>본 포스팅은 이하 버전을 기준으로 작성되었습니다.
· Firebase 6.29.0
· Swift 5.2.4
 Firebase 한 번쯤 들어보지 않으셨나요? 초보 개발자가 모바일 앱을 개발하고 개인 앱 서버를 운영하는데 있어 빠질 수 없는 것이 Firebase 가 아닐까 합니다. 속도에 조금 불만이 있긴 하지만 사실 백엔드를 모르는 개발자가 이렇게 쉽고 간편하게 회원가입부터 데이터 관리까지 할 수 있는 서버를 그것도 일정수준까지는 무료로 운영할 수 있게 해주는 서비스가 또 어디있을까요? 이 서비스가 없었으면 저는 지금 Python 도 같이 배우고 있었을 것 같네요.</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://kasroid.github.io/about-me/</link>
      <pubDate>Mon, 24 Aug 2020 17:04:22 +0900</pubDate>
      
      <guid>https://kasroid.github.io/about-me/</guid>
      <description>This is About Me Page. I&amp;rsquo;m going to upload my career.</description>
    </item>
    
    <item>
      <title>Homebrew 설치 및 기본 사용법 익히기</title>
      <link>https://kasroid.github.io/posts/developertools/20200823-homebrew-%E1%84%89%E1%85%A5%E1%86%AF%E1%84%8E%E1%85%B5-%E1%84%86%E1%85%B5%E1%86%BE-%E1%84%80%E1%85%B5%E1%84%87%E1%85%A9%E1%86%AB-%E1%84%89%E1%85%A1%E1%84%8B%E1%85%AD%E1%86%BC%E1%84%87%E1%85%A5%E1%86%B8-%E1%84%8B%E1%85%B5%E1%86%A8%E1%84%92%E1%85%B5%E1%84%80%E1%85%B5/</link>
      <pubDate>Sun, 23 Aug 2020 16:48:19 +0900</pubDate>
      
      <guid>https://kasroid.github.io/posts/developertools/20200823-homebrew-%E1%84%89%E1%85%A5%E1%86%AF%E1%84%8E%E1%85%B5-%E1%84%86%E1%85%B5%E1%86%BE-%E1%84%80%E1%85%B5%E1%84%87%E1%85%A9%E1%86%AB-%E1%84%89%E1%85%A1%E1%84%8B%E1%85%AD%E1%86%BC%E1%84%87%E1%85%A5%E1%86%B8-%E1%84%8B%E1%85%B5%E1%86%A8%E1%84%92%E1%85%B5%E1%84%80%E1%85%B5/</guid>
      <description>오늘 소개할 Homebrew 는 여러가지 종류의 프로그램을 설치하고 삭제할 수 있게 도와주는 툴입니다. 제가 개발자로 커리어를 전환하고나서 알게된 가장 유용한 툴이고 가장 애용하는 툴이기도 합니다. 조금만 익숙해지면 정말 편리하고 강력한 툴이기 때문에 시간이 나면 언젠가 꼭 한번 소개하고 싶었는데요. 그게 오늘이네요! ㅎㅎ
Homebrew 는 macOS 의 Package Manager 입니다. 쉽게 말해서 일종의 프로그램 관리자 같은 역할이라 생각하면 좋을 것 같아요. 왠만한 모든 상용 프로그램의 설치 및 삭제, 그리고 업데이트 관리까지 Terminal 을 통해 Homebrew 하나로 해결할 수 있습니다.</description>
    </item>
    
    <item>
      <title>CocoaPods: 설치 및 라이브러리 적용하기</title>
      <link>https://kasroid.github.io/posts/ios/20200823-cocoapods-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <pubDate>Sun, 23 Aug 2020 19:14:16 +2430</pubDate>
      
      <guid>https://kasroid.github.io/posts/ios/20200823-cocoapods-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <description>오늘은 CocoaPods 가 무엇인지 알아보도록 하겠습니다.
개발을 할 때 모든 것을 스스로 만드는 것도 좋지만 필요에 따라 Library 를 써서 시간과 노력을 절약하고 다른 곳에 좀 더 신경을 쓰는 것이 좋을 때도 있을겁니다. 하지만 그렇게 Library 사용 빈도가 점점 늘게되면 나중에는 Library 를 찾거나 관리하는데 시간이 많이 소모되게 됩니다. 그럼 아무래도 Library 를 쓰는 의미가 많이 퇴색되겠죠? 그래서 Xcode 에서 이런 Library 관리를 쉽게 할 수 있도록 도와주는 것이 CocoaPods 입니다.</description>
    </item>
    
    <item>
      <title>SwiftUI Basics: Button 과 List 생성하기</title>
      <link>https://kasroid.github.io/posts/ios/20200802-swiftui-basics-button-%EA%B3%BC-list-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/</link>
      <pubDate>Sun, 02 Aug 2020 01:42:41 +0900</pubDate>
      
      <guid>https://kasroid.github.io/posts/ios/20200802-swiftui-basics-button-%EA%B3%BC-list-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/</guid>
      <description>본 포스팅은 Swift 5.2.4 기준으로 작성되었습니다.
 이번 포스팅에서는 Button 과 List (UIKit 의 UITableView 와 동일) 를 생성하는 방법을 공부해보도록 할게요. SwiftUI 에서는 Button 과 List 를 구현하는 코드도 단 몇 줄이면 충분합니다. 이게 다 오토레이아웃이 자동 적용되서 그런것 같아요.
 Button 이전에 공부할 때 Text 가 View 라고했었으니까 Button 도 당연히 View 의 일종일거라 생각하고 따로 찾아보진 않으려고 했거든요? 근데 그래도 공식문서를 한번쯤 보는게 예의가 아닐까 싶어 찾아보니 View 가 아니였습니다.</description>
    </item>
    
    <item>
      <title>SwiftUI Basics: Stacks 와 Spacer 사용하기</title>
      <link>https://kasroid.github.io/posts/ios/20200731-swiftui-basics-stacks-%EC%99%80-spacer-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <pubDate>Fri, 31 Jul 2020 11:33:35 +0900</pubDate>
      
      <guid>https://kasroid.github.io/posts/ios/20200731-swiftui-basics-stacks-%EC%99%80-spacer-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <description>본 포스팅은 Swift 5.2.4 기준으로 작성되었습니다.
 SwiftUI 에서는 자동으로 뷰의 레이아웃을 잡아주는 기능이 매우 강화되면서 Stacks 의 사용이 더 중요해졌습니다. Stack 은 현재 총 3종류가 있으며 HStack, VStack, ZStack 으로 구성됩니다. 함께 공식 개발자 문서를 보려고 했는데 너무 간단하게 나와있어서 의미가 없을 것 같아요 ㅎ 그냥 하나씩 알아보죠 ㅎㅎㅎ
 HStack HStack 은 Horizontal Stack 으로 우리가 뷰를 가로로 배치할 수 있게 도와주는 View 입니다. 사용법도 이보다 쉬울 수가 없어요.</description>
    </item>
    
    <item>
      <title>SwiftUI Basics: Text 와 Image 생성하기</title>
      <link>https://kasroid.github.io/posts/ios/20200731-swiftui-basics-text-%EC%99%80-image-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/</link>
      <pubDate>Fri, 31 Jul 2020 10:38:35 +0900</pubDate>
      
      <guid>https://kasroid.github.io/posts/ios/20200731-swiftui-basics-text-%EC%99%80-image-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/</guid>
      <description>본 포스팅은 Swift 5.2.4 기준으로 작성되었습니다.
 이번 포스팅에서는 Text, Image, Stack, Button, List 를 SwiftUI 환경에서 생성하는 법을 간단하게 알아보도록 하겠습니다. SwiftUI 의 코드가 얼마나 간결해졌냐면 저 instance 들을 생성하기 위해 우리가 알아야하는 단어는 정말 저게 끝이에요. 저 단어들과 괄호를 조합하여 간단하게 instance 를 생성할 수 있습니다. 레이아웃도 자동으로 잡아주고요!
 Text 텍스트를 생성하는 법은 Xcode 를 실행하자마자 바로 알 수 있습니다. 기본적으로 &amp;ldquo;Hello World&amp;rdquo; 가 써져있으니까요.
그럼 텍스트를 표시하기 위해 필요한 과정을 UIKit 과 한번 비교해볼까요?</description>
    </item>
    
    <item>
      <title>SwiftUI Basics: 프로젝트 생성 및 기본제공 코드 분석</title>
      <link>https://kasroid.github.io/posts/ios/20200730-swiftui-basics-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EA%B8%B0%EB%B3%B8%EC%A0%9C%EA%B3%B5-%EC%BD%94%EB%93%9C-%EB%B6%84%EC%84%9D/</link>
      <pubDate>Thu, 30 Jul 2020 23:56:35 +0900</pubDate>
      
      <guid>https://kasroid.github.io/posts/ios/20200730-swiftui-basics-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EA%B8%B0%EB%B3%B8%EC%A0%9C%EA%B3%B5-%EC%BD%94%EB%93%9C-%EB%B6%84%EC%84%9D/</guid>
      <description>본 포스팅은 Swift 5.2.4 기준으로 작성되었습니다.
 SwiftUI 에서 사용자가 확인할 화면을 생성하는 것은 UIKit 과 다르게 확연히 간단해졌습니다.
첫 눈에 바로 들어오는 특징으로는 인스턴스를 생성 시에 더 이상 UI 접두사를 붙이지 않아도 된다는 것이네요. 그리고 내부적으로 바뀐 큰 차이점은 UIKit 의 인스턴스들은 대부분 class 형태로 구성되어있던 것과 다르게 SwiftUI 의 인스턴스들은 대부분 struct 형태로 구현되어있습니다.
그럼 프로젝트를 생성하고 달라진 점들을 직접 살펴보는 것이 좋겠어요. 프로젝트 생성 시 User Interface 를 SwiftUI 로 설정하고 시작하게 되면 다음과 같은 화면이 보입니다.</description>
    </item>
    
  </channel>
</rss>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Developer Tools on Code with Coffee, Perfect</title>
        <link>https://kasroid.github.io/posts/developertools/</link>
        <description>Recent content in Developer Tools on Code with Coffee, Perfect</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Tue, 25 Aug 2020 01:27:47 +0900</lastBuildDate>
        <atom:link href="https://kasroid.github.io/posts/developertools/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Firebase: Xcode 프로젝트와 연동하기</title>
            <link>https://kasroid.github.io/posts/developertools/20200829-firebase-xcode-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%99%80-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0/</link>
            <pubDate>Sat, 29 Aug 2020 09:56:46 +0900</pubDate>
            
            <guid>https://kasroid.github.io/posts/developertools/20200829-firebase-xcode-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%99%80-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0/</guid>
            <description>본 포스팅은 이하 버전을 기준으로 작성되었습니다.
· Firebase 6.29.0
· Swift 5.2.4
 Firebase 한 번쯤 들어보지 않으셨나요? 초보 개발자가 모바일 앱을 개발하고 개인 앱 서버를 운영하는데 있어 빠질 수 없는 것이 Firebase 가 아닐까 합니다. 속도에 조금 불만이 있긴 하지만 사실 백엔드를 모르는 개발자가 이렇게 쉽고 간편하게 회원가입부터 데이터 관리까지 할 수 있는 서버를 그것도 일정수준까지는 무료로 운영할 수 있게 해주는 서비스가 또 어디있을까요? 이 서비스가 없었으면 저는 지금 Python 도 같이 배우고 있었을 것 같네요.</description>
            <content type="html"><![CDATA[<blockquote>
<p>본 포스팅은 이하 버전을 기준으로 작성되었습니다.<br>
· Firebase 6.29.0<br>
· Swift 5.2.4</p>
</blockquote>
<p><strong>Firebase</strong> 한 번쯤 들어보지 않으셨나요? 초보 개발자가 모바일 앱을 개발하고 개인 앱 서버를 운영하는데 있어 빠질 수 없는 것이 Firebase 가 아닐까 합니다. 속도에 조금 불만이 있긴 하지만 사실 백엔드를 모르는 개발자가 이렇게 쉽고 간편하게 회원가입부터 데이터 관리까지 할 수 있는 서버를 그것도 일정수준까지는 무료로 운영할 수 있게 해주는 서비스가 또 어디있을까요? 이 서비스가 없었으면 저는 지금 Python 도 같이 배우고 있었을 것 같네요. 물론 결국엔 배우는게 목표지만&hellip;</p>
<p>아무튼 Firebase 는 모바일 앱 개발자에게 백엔드 과정을 지원해주는 플랫폼 입니다.</p>
<p>그럼 오늘은 Xcode 프로젝트와 Firebase 를 연동하는 방법을 알아보도록 하겠습니다. 이 포스팅을 작성하는 시점에서는 Firebase 가 Swift Package Manager 를 지원하지 않아 <strong>CocoaPods</strong> 를 통해 설치하게되므로 CocoaPods 에 익숙하지 않은 분들은 <a href="https://kasroid.github.io/posts/ios/20200823-cocoapods-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/">CocoaPods: 설치 및 라이브러리 적용하기</a> 포스트를 먼저 읽고 와주세요 ㅎㅎ</p>
<hr>
<h2 id="firebase-와-친해지기">Firebase 와 친해지기</h2>
<p><strong>Firebase</strong> 는 <strong>Google 아이디</strong> 만 있으면 특별히 가입할 필요도 없이 누구나 쉽게 사용할 수 있어요. 일단 <a href="https://firebase.google.com">Firebase 공식 홈페이지</a> 에 함께 접속해볼게요.</p>
<p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fvf8Bs%2FbtqGqWQ7iVw%2FccvCdS3f3xAcMLlKS2BGnK%2Fimg.png" alt="Firebase 공식홈페이지"></p>
<p>홈페이지에 접속하고 나면 이런 화면을 볼 수 있을거에요. 구글 아이디로 로그인이 되어있다면 우측 상단에는 본인의 프로필 사진도 보이게 됩니다 ㅎㅎ 만약에 정말 혹시라도 만약에 구글 아이디가 없으신 분들은 계정을 하나 만들어 주세요&hellip;</p>
<p>그리고 프로필 사진 옆을 잘 보시면 <strong>콘솔로 이동</strong>이라는 항목이 보이시죠? 이걸 클릭해서 Firebase 프로젝트가 보이는 화면으로 들어가 봅시다.</p>
<p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FFhSiP%2FbtqGqahD4vV%2FlcRt5W5EawLI2icFZb0PJk%2Fimg.png" alt="Firebase 프로젝트 화면"></p>
<p>저는 이미 Firebase 를 통해 여러 프로젝트를 진행했기 때문에 2개의 프로젝트가 보이지만 여러분은 아마 + 버튼 하나만 보일거에요. 이 버튼으로 Firebase 의 프로젝트를 생성하고 <strong>Xcode 프로젝트</strong> 의 <strong>Bundle Identifier</strong> 를 이용해서 연결해주는 방식입니다. 연결이 되고나면 Xcode 프로젝트가 코드를 통해 Firebase 를 찾아가라는 명령을 받고 Firebase 서버에 접속하여 자신의 Bundle Identifier 값을 갖고있는 Firebase 의 프로젝트를 찾아가는 것이라고나 할까나&hellip; 아무튼 뭐 그렇습니다 ㅋㅋㅋ</p>
<p>프로젝트를 만드는 순서는 지금 + 버튼을 눌러 Firebase 프로젝트 생성을 시작하고 중간에 Xcode 프로젝트의 Bundle Identifier 가 필요한 시점에 Xcode 프로젝트를 생성해도 되지만 어자피 이렇게 하면 프로젝트를 왔다갔다해야되서 번거로우니 저는 그냥 Xcode 프로젝트부터 생성하고 Firebase 를 생성하는 것을 선호합니다.</p>
<hr>
<h2 id="bundle-identifier-복하사기">Bundle Identifier 복하사기</h2>
<p>그럼 Xcode 프로젝트를 생성하고 <strong>Bundle Identifier</strong> 를 복사해둘게요.</p>
<p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FHii4j%2FbtqGrh1DSnM%2FYcO2c87Ru8EdM2b8efry5k%2Fimg.png" alt="Xcode 프로젝트 첫화면"></p>
<hr>
<h2 id="firebase-프로젝트-생성하기">Firebase 프로젝트 생성하기</h2>
<p>그럼 이제 + 버튼을 눌러 프로젝트를 생성해볼게요. 첫 화면은 프로젝트 명을 생성하는 화면입니다.</p>
<p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FkS7P7%2FbtqGnZOPAm7%2FtCZkntJF702kKkbzeYIye0%2Fimg.png" alt="Firebase 프로젝트 생성화면"></p>
<p>Xcode 프로젝트명과 달라도 괜찮습니다. 단순히 Firebase 홈페이지 내부적으로 관리하기 위한 이름이에요. 그래도 두 프로젝트가 서로 어느정도는 이름이 비슷해야 나중에 알아보기 쉬우니까 저는 똑같이 만들도록 할게요.</p>
<p>그 다음으로는 <strong>Google Analytics</strong> 를 설정하는 페이지가 뜰거에요. 이걸 사용하게되면 내 앱에 접속하는 사용자의 다양한 정보들을 그래프와 수치로 받아볼 수 있게 됩니다. 반드시 사용해야하는 기능은 아니라 필요없는 상황에서는 그냥 끄고 사용하는 것도 괜찮습니다.</p>
<p>이번에는 처음이니까 켜고 진행해보도록 할게요.</p>
<p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fvr8Kt%2FbtqGqbARtJ7%2F1k0oAK1IrPKhoedHb4ce8k%2Fimg.png" alt="Firebase Google Analytics"></p>
<p>다음 화면에서는 <strong>Google Analytics</strong> 에 어떤 계정을 사용할꺼냐 묻는데 어자피 하나밖에 없습니다. <strong>Defualt Account for Firebase</strong> 를 선택해주세요.</p>
<p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbjPMjg%2FbtqGmQKWlMo%2FC22UxDvxgHU7GKqG1b0F70%2Fimg.png" alt="Google Analytics 계정 선택"></p>
<p>그리고 프로젝트 생성을 누르면 잠시 로딩을 하고 프로젝트 내부화면으로 넘어가게 됩니다.</p>
<p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdOVlft%2FbtqGkWYZfyz%2F4hiwZ670vWw95VOZtKkZuK%2Fimg.png" alt="프로젝트 생성 중"></p>
<hr>
<h2 id="xcode-프로젝트와-연동하기">Xcode 프로젝트와 연동하기</h2>
<p>최초로 <strong>Firebase</strong> 에서 프로젝트를 만든 경우에는 저하고 화면이 조금 다를 수 있지만 별로 어려운 부분은 없으니 잘 넘어오셔서 아래와 같은 화면에서 <strong>iOS</strong> 를 클릭해주세요. 우리는 iOS 앱을 개발하는 것이므로 iOS 를 선택하는 것입니다 ㅎㅎ</p>
<p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbgBm7j%2FbtqGmQjW7pL%2FyO5XS6cW6MBe1sm2gLPhkk%2Fimg.png" alt="Firebase iOS 선택"></p>
<p>이제 드디어 <strong>Xcode 프로젝트</strong>의 <strong>Bundle Identifier</strong> 가 필요한 시점이 왔어요. 가장 첫 텍스트필드에 값을 넣어주고 <strong>Register App</strong> 을 눌러줍니다.</p>
<p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbhIxri%2FbtqGpxKX38N%2F4nhZKuCv5UVfqRA9LZ88Ik%2Fimg.png" alt="Bundle ID 연결"></p>
<p>그리고 이제 다음 화면에서 <strong>GoogleService-Info.plist</strong> 을 다운받아주세요.</p>
<p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FosTE8%2FbtqGqQiX6RL%2FTCPsFP5Y3kfDEZ0Jvf8rLk%2Fimg.png" alt="GoogleService-Info.plist 다운로드"></p>
<p>그리고 다운받은 파일을 <strong>Xcode 프로젝트</strong>에 드래그해서 아래 이미지처럼 옮겨 넣어줍니다.</p>
<p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcfkUuh%2FbtqGqbt6YgL%2F8HRaK0ueyYCvsw6ZQdWSW1%2Fimg.png" alt="Info.plist 파일 옮겨넣기"></p>
<p>이때 알림창이 하나 뜨게되는데 꼭 첫번째 칸을 체크해주세요. Xcode 프로젝트의 폴더 내부로 실제 plist 파일을 <strong>복사</strong>한다는 의미입니다.</p>
<p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcAcny2%2FbtqGnITu7j4%2FCw8D3O87v4DnNNcVh0W7fK%2Fimg.png" alt="파일 복사 설정"></p>
<p>다시 Firebase 홈페이지로 돌아와서 Next 를 누르면 이제 <strong>CocoaPods</strong> 을 통해 Firebase 사용에 필요한 파일들을 다운로드 받으라고 안내합니다.</p>
<p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcQZxwt%2FbtqGmPkYglb%2Fe62ufnkDw35kZtNmOKuc70%2Fimg.png" alt="Firebase 구성파일 설치 안내"></p>
<p>Xcode 프로젝트 폴더 내의 Podfile 에 <code>pod 'Firebase'</code> 을 입력해주세요. 여기서 막히는 분들은 포스팅 초반에 한번 언급한 <a href="http://localhost:1313/posts/ios/20200823-cocoapods-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/">CocoaPods 튜토리얼</a> 을 참고해주세요.</p>
<pre><code class="language-console" data-lang="console">pod 'Firebase'
</code></pre><p>이렇게 <strong>CocoaPods</strong> 설치를 마쳤다면 다시 Next 를 눌러줍니다. 이제 Xcode 프로젝트의 <strong>AppDelegate</strong> 에서 우리가 필수적으로 작업해야 할 내용들을 안내하고 있네요.</p>
<p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FWLc1p%2FbtqGrdE7gUj%2F7zJy0IGsEal661No3QP2uK%2Fimg.png" alt="AppDelegate 작업 안내"></p>
<p>더 이상 <strong>xcodeproj</strong> 파일은 사용할 수 없으므로 <strong>xcworkspace</strong> 파일을 열고 새롭게 생긴 파일들을 잘 인식할 수 있돌고 빌드를 한번 해줍니다.</p>
<p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Foe8x8%2FbtqGrjSG0TY%2FIWH9ES1MAZoMs3ZWke4lO1%2Fimg.png" alt="Finder 의 xcworkspace 파일"></p>
<p>그리고 프로젝트 상단에 <strong>Firebase</strong> 를 <strong>import</strong> 해보면 오류없이 잘 인식하는 것을 확인할 수 있습니다.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-swift" data-lang="swift"><span style="color:#66d9ef">import</span> <span style="color:#a6e22e">Firebase</span>
</code></pre></div><p>그리고 <code>application(didFinishLaunchingWithOptions:)</code> 함수 내부에 <code>FirebaseApp.configure()</code> 코드를 구현해줍니다.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-swift" data-lang="swift"><span style="color:#66d9ef">func</span> <span style="color:#a6e22e">application</span>(<span style="color:#66d9ef">_</span> application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -&gt; Bool {
    FirebaseApp.configure()
    <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">true</span>
}
</code></pre></div><p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdIkcCA%2FbtqGtDbQ8yB%2FQrQnd33Wx1diRnxM54WaFK%2Fimg.png" alt="Xcode 프로젝트 AppDelegate"></p>
<p>다시 Firebase 홈페이지에서 Next 를 누르면 이런 화면이 뜨게되는데 이제 Xcode 에서 앱을 한번 실행합니다.</p>
<p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FpPIkY%2FbtqGpxEaaYA%2Fu1QhRYIbaV0Vkhv8HZeb6K%2Fimg.png" alt="Firebase 연결상태 최종 확인"></p>
<p>혹시라도 <code>FirebaseApp.configure()</code> 을 찾을 수 없다고 오류가 뜨는 분이 있다면 Xcode 를 먼저 껏다 켜주시고 그래도 안된다면 아래 코드를 추가로 import 해보세요.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-swift" data-lang="swift"><span style="color:#66d9ef">import</span> <span style="color:#a6e22e">FirebaseCore</span>
</code></pre></div><p>그리고 Firebase 가 정상적으로 연결되었다면 <strong>Xcode 콘솔</strong>에서 다음과 같은 메세지를 확인할 수 있습니다.</p>
<p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FQFFR0%2FbtqGmPL4xjK%2Fd6HjKn5kBc8Z5AaytVKOVK%2Fimg.png" alt="Xcode Console 메세지 확인"></p>
<p>Firebase 홈페이지에서는 시뮬레이터가 실행되고 조금 뒤에 이렇게 초록색 안내가 뜨며 아래 버튼들이 활성화됩니다.</p>
<p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcAI1IK%2FbtqGtD3ZwDg%2FhmU7UuCxU0FcMlOLgprUQ1%2Fimg.png" alt="Firebase 연결 성공화면"></p>
<p>계속 이 화면에서 넘어가지지 않는다면 <strong>Skip this page</strong> 를 눌러 다음 화면으로 넘어가주세요. 그냥 넘어가도 전혀 문제 없습니다.</p>
<p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcM8wbx%2FbtqGmQjXDhJ%2Fj6t4uJSLSrlZclWo2ts7mk%2Fimg.png" alt="Firebase 연결 중 화면"></p>
<p>자 이것으로 Firebase 연동을 완전히 마쳤습니다!</p>
<p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbPCpUD%2FbtqGtf3mohv%2FxzWXJqo4sTFnHGjSNltQC0%2Fimg.png" alt="Firebase 와 Xcode 프로젝트가 연결된 화면"></p>
<p>오늘도 함께 공부하느라 수고 많으셨습니다. 개인 앱을 만드는 분들은 앞으로 많은 곳에서 <strong>Firebase</strong> 를 사용하게 될 수 있으니까 지금 이 과정은 눈감고도 할 수 있을만큼 익숙하게 알아두시는 것을 추천합니다.</p>
]]></content>
        </item>
        
        <item>
            <title>Homebrew 설치 및 기본 사용법 익히기</title>
            <link>https://kasroid.github.io/posts/developertools/20200823-homebrew-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%9D%B5%ED%9E%88%EA%B8%B0/</link>
            <pubDate>Sun, 23 Aug 2020 16:48:19 +0900</pubDate>
            
            <guid>https://kasroid.github.io/posts/developertools/20200823-homebrew-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%9D%B5%ED%9E%88%EA%B8%B0/</guid>
            <description>오늘 소개할 Homebrew 는 여러가지 종류의 프로그램을 설치하고 삭제할 수 있게 도와주는 툴입니다. 제가 개발자로 커리어를 전환하고나서 알게된 가장 유용한 툴이고 가장 애용하는 툴이기도 합니다. 조금만 익숙해지면 정말 편리하고 강력한 툴이기 때문에 시간이 나면 언젠가 꼭 한번 소개하고 싶었는데요. 그게 오늘이네요! ㅎㅎ
Homebrew 는 macOS 의 Package Manager 입니다. 쉽게 말해서 일종의 프로그램 관리자 같은 역할이라 생각하면 좋을 것 같아요. 왠만한 모든 상용 프로그램의 설치 및 삭제, 그리고 업데이트 관리까지 Terminal 을 통해 Homebrew 하나로 해결할 수 있습니다.</description>
            <content type="html"><![CDATA[<p>오늘 소개할 <strong>Homebrew</strong> 는 여러가지 종류의 프로그램을 설치하고 삭제할 수 있게 도와주는 툴입니다. 제가 개발자로 커리어를 전환하고나서 알게된 가장 유용한 툴이고 가장 애용하는 툴이기도 합니다. 조금만 익숙해지면 정말 편리하고 강력한 툴이기 때문에 시간이 나면 언젠가 꼭 한번 소개하고 싶었는데요. 그게 오늘이네요! ㅎㅎ</p>
<p>Homebrew 는 <strong>macOS</strong> 의 <strong>Package Manager</strong> 입니다. 쉽게 말해서 일종의 프로그램 관리자 같은 역할이라 생각하면 좋을 것 같아요. 왠만한 모든 상용 프로그램의 설치 및 삭제, 그리고 업데이트 관리까지 Terminal 을 통해 Homebrew 하나로 해결할 수 있습니다. Homebrew 를 통해 프로그램을 설치하는게 편해봤자 얼마나 더 편하다고 굳이 이렇게 새로운 것을 배우기까지 해야하는지 의문이 들 수 있어요. 그래서 Homebrew 를 사용할 때와 사용하지 않을 때 우리가 프로그램을 설치하고 사용하기까지 거치는 과정들을 나열하고 차이점을 비교해 보겠습니다.</p>
<ol>
<li>구글 접속</li>
<li>검색</li>
<li>프로그램을 다운받을 수 있는 홈페이지 접속</li>
<li>홈페이지에서 다운로드 링크를 찾기</li>
<li>프로그램 다운로드</li>
<li>다운로드 폴더에 들어가서 설치파일 실행</li>
<li>설치과정 진행</li>
<li>설치가 완료되고나면 다운로드 폴더에서 설치 파일 제거</li>
</ol>
<p>대부분 이런 과정들을 거쳐 프로그램을 설치하죠? 프로그램을 한개만 설치할 때는 이렇게 설치하는 방법도 나쁘진 않아요. 하지만 만약 10개를 설치해야한다면 어떨까요? 20개라면? 프로그램 설치가 비록 어려운 부분은 없지만 정말 귀찮은 일이지요. Homebrew 를 사용하면 최대 단 2번의 과정으로 위 과정들을 모두 끝낼 수 있습니다.</p>
<ol>
<li>다운로드받을 프로그램명 검색(optional)</li>
<li>다운로드 명령 실행</li>
</ol>
<p>정말 이보다 간단할 수가 있을까요? 지금은 프로그램을 검색하는 과정까지 포함을 했지만 사실 우리가 다운받을 프로그램의 이름을 정확히 알고 있는 경우에는 검색조차도 필요가 없습니다. Terminal 에 커맨드 단 한줄 입력만으로 새로운 프로그램을 사용할 준비가 끝납니다.</p>
<p>Homebrew 로 단순히 프로그램을 하나씩 설치하고 제거하는 것은 물론이고 만약 내가 설치해놓은 프로그램들을 리스트 형태로 만들어 두었다면(리스트를 만드는 기능도 Homebrew 에서 제공합니다) 한 번에 프로그램 수십개를 설치할 수도 있습니다. 리스트에 적힌 모든 목륵을 설치하라는 커맨드를 입력하고 우리는 커피 한잔하고 오면 프로그램들이 모두 설치되어 있는 것이죠 ㅎㅎㅎ</p>
<p>어떤가요? 듣기만해도 매력이 뿜뿜하고 배우고 싶어지지 않나요?? ㅋㅋㅋㅋ</p>
<hr>
<h2 id="homebrew-설치하기">Homebrew 설치하기</h2>
<p>이정도면 제 <strong>Homebrew</strong> 영업에 어느정도 넘어왔을테니 바로 설치를 한번 시작해볼게요. <del>안 넘어왔어도 그냥 보세요 ㅋㅋ</del></p>
<p>먼저 Homebrew <a href="https://brew.sh">공식 홈페이지</a> 에 접속합니다.</p>
<p><img src="https://user-images.githubusercontent.com/41736472/90974084-e2a15100-e562-11ea-900d-d8b0ae41297d.png" alt="Homebrew Official Website"></p>
<p>이렇게 생긴 홈페이지가 보이면 <strong>Install Homebrew</strong> 라고 적힌 부분의 아래 명령어를 <strong>Terminal</strong> 에서 실행합니다.</p>
<pre><code class="language-Console" data-lang="Console">/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&quot;
</code></pre><p>만약 Terminal 에 자물쇠 모양이 나타나며 비밀번호를 요구할 경우 비밀번호를 입력해주세요. 우리가 평소 웹사이트에서 비빌번호를 입력할 때처럼 실시간으로 비밀번호가 입력되는 상황이 Terminal 에서는 보이지 않지만 실제로는 비밀번호가 입력되고 있는 상황이니 전부 입력하고 리턴키를 누르면 됩니다.</p>
<hr>
<h2 id="homebrew-사용법-익히기">Homebrew 사용법 익히기</h2>
<p>Homebrew 설치를 정상적으로 마쳤다면 이제 Terminal 에서 <code>brew</code> 명령어를 사용할 수 있게 됩니다. 그럼 Terminal 에 <code>brew</code> 라고 한번 입력해볼게요.</p>
<p><img src="https://user-images.githubusercontent.com/41736472/91327134-1b118b00-e800-11ea-8620-0f5c9194a8ee.png" alt="Typed &lsquo;brew&rsquo; in Terminal"></p>
<p>여러가지 명령어들이 많이 뜨네요 ㅎㅎ 생소한 명령어다보니 처음에는 조금 어렵게 느껴지더라도 그때그때 필요할 때 한번씩 찾아 쓰다보면 명령어들이 전부 쉬운편이라 금방 외워서 사용하게 되니 일부러 외울 필요는 없습니다. <del>우리는 영어 한마디 제대로 못하던 시절에도 수 많은 스타크래프트 치트키를 외워서 사용했었습니다 ㅎㅎ</del></p>
<hr>
<h3 id="프로그램-검색하기">프로그램 검색하기</h3>
<p><strong>Homebrew</strong> 로 프로그램을 설치하기 위해서는 먼저 우리가 원하는 프로그램의 명칭을 정확하게 알아야 합니다. 프로그램 이름이 단어 하나로 구성된 경우에는 대부분 그 자체로 프로그램명이 되지만 이름에 띄어쓰기가 있는 경우 표기 방법이 조금 다를 수 있으니 먼저 검색을 한번 해보는 것이 좋습니다. 그럼 이번에는 예제로 구글 크롬을 검색해보도록 할게요.</p>
<pre><code class="language-Console" data-lang="Console">brew search google chrome
</code></pre><p><img src="https://user-images.githubusercontent.com/41736472/91327195-2fee1e80-e800-11ea-87af-edeea42c8994.png" alt="Searched Google Chrome via Homebrew"></p>
<p>검색 결과가 총 4개가 있네요. 딱 봐도 첫번째 결과가 우리가 찾는 구글 크롬인 것 같아요. 꽤 정확한 결과값이므로 이 단어로 바로 설치를 진행해도 되지만 정말 혹시 모르는 경우를 대비해서 이게 정확한 곳에서 다운로드 받는 것인지 확인해 볼 수 있습니다.</p>
<pre><code class="language-Console" data-lang="Console">brew cask home google-chrome
</code></pre><p><code>cask</code> 는 상용 프로그램이라는 뜻으로 일반 홈페이지에서 직접 다운로드 받는 프로그램을 의미합니다. 구글 크롬은 App Store 다운받거나 Terminal 에서 Tool 의 형태로 제공되는 것이 아닌 일반 브라우저에서 다운로드 받아 사용하는 상용 프로그램이니까 <code>cask</code> 에 속합니다. 그리고 <code>home</code> 은 다운받을 수 있는 홈페이지를 뜻합니다. 즉 구글 크롬을 다운받을 수 있는 홈페이지를 열라는 뜻이에요.</p>
<p><img src="https://user-images.githubusercontent.com/41736472/91327244-409e9480-e800-11ea-8669-846d77935901.png" alt="Google Chrome Download Page"></p>
<p>우리가 딱 원하는 페이지가 떳어요!! 그럼 이제 <code>google-chrome</code> 을 사용해 설치해볼게요.</p>
<hr>
<h3 id="프로그램-설치하기">프로그램 설치하기</h3>
<p>설치방법은 매우 간단합니다.</p>
<pre><code class="language-Console" data-lang="Console">brew cask install google-chrome
</code></pre><p>잠깐 기다려주고나면 짜잔!! 설치가 모두 끝났고 이제 정상적으로 프로그램을 사용할 수 있게되었습니다.</p>
<hr>
<h3 id="설치된-프로그램-확인하기">설치된 프로그램 확인하기</h3>
<p>우리가 설치한 프로그램의 목록도 brew 를 통해 간단히 나열하고 확인할 수가 있습니다. 다음 커맨드를 입력해 보세요.</p>
<pre><code class="language-Console" data-lang="Console">brew cask list
</code></pre><p>내 컴퓨터에 설치되어 있는 일반 프로그램의 리스트를 달라는 뜻이에요.</p>
<p><img src="https://user-images.githubusercontent.com/41736472/91327307-4dbb8380-e800-11ea-9fa4-23be49d76475.png" alt="Installed Program List"></p>
<p>방금 설치한 구글 크롬이 목록에 표시된다면 정상적으로 설치가 되었다는 뜻입니다. 저는 모든 프로그램들을 Homebrew 로 관리하고 있어서 이렇게 많이 뜬답니다 ㅎㅎㅎ</p>
<h3 id="프로그램-삭제하기">프로그램 삭제하기</h3>
<p>설치하는 방법을 알았으니 삭제는 당연히 세트메뉴로 배워야겠죠?</p>
<pre><code class="language-Console" data-lang="Console">brew uninstall google-chrome
</code></pre><p>네 끝입니다. 이렇게 <strong>Homebrew</strong> 가 프로그램 관리자 역할을 하며 우리 컴퓨터에 설치되어 있거나 설치할 모든 프로그램을 관리해주기 때문에 우리는 쓸데없는 시간낭비를 줄이고 다른 것들에 더 집중할 수 있습니다.</p>
<p>다음 포스팅에서는 <strong>Homebrew</strong> 를 통해 내가 사용하는 프로그램들을 한번에 업데이트하는 방법과 내 컴퓨터에 깔려있는 모든 프로그램(Homebrew 를 통해 설치한)들의 리스트를 텍스트 파일형태로 저장하고 그 파일을 사용해 모든 프로그램을 한번에 설치할 수 있는 방법을 알아보겠습니다.</p>
<p>Terminal 을 통해 프로그램을 설치하고 관리하는 것이 처음에는 익숙하지 않아 조금은 거부감이 들고 부담스러울 수 있지만 그냥 쓰다보면 정말 어려운거 없고 훨씬 편하다는 사실을 알게될거에요. 그럼 여러분들도 <strong>Homebrew</strong> 꼭 사용하길 바라겠습니다!</p>
]]></content>
        </item>
        
    </channel>
</rss>
